library(openintro)
library(gmodels)
#Hacer tabla histograma para una columna, cd ocurrencia.
CrossTable(hsb2$prog)
#Hacer tabala cruzada, o de incidencia, vale con poner las dos columnas
CrossTable(hsb2$prog, hsb2$gender)
#Con tidyverse
library(tidyverse)
hsb2 %>% group_by(prog) %>% summarize(n = n())
hsb2 %>% group_by(prog, gender) %>% summarize(n = n())
#podemos transformar variables de chr a factor asi:
hsb2$gender2 <- as.factor(hsb2$gender)
### COMPARANDO PROPORCIONES
library(ggstatsplot)
ggpiestats(data=hsb2,x=gender, bf.message = FALSE)
#Tabla con gmodels
CrossTable(hsb2$gender)
#Tabla con gmodels
CrossTable(hsb2$gender)
View(hsb2)
#Prueba de proporciones apra dos muestras
ggbarstats(data=hsb2, x=gender, y=schtyp, bf.message = FALSE)
#congmodels y tablas de contingencia
CrossTable(x=hsb2$gender,y=hsb2$schtyp, prop.r = FALSE,prop.t = FALSE,prop.chisq = FALSE,chisq = TRUE)
#la correcion de YAtes es pq la chi² tiende a dar más falsos positivos, asi q debemos coregirlo.
#Ojo, esto por supuesto siempre está sujeto a los supuestos de Chi²:
#cada dato es independiencte (OK, es una persona distinta)
#frecuencia esperada mayor que 5 sino usar pruyeba exacta de Fisher o fusionar categorias
CrossTable(x=hsb2$gender,y=hsb2$schtyp, prop.r = FALSE,prop.t = FALSE,prop.chisq = FALSE,digits = 2,fisher = TRUE)
#b) reagrupar, veamos un ejemplo
library(plyr)
#b) reagrupar, veamos un ejemplo
library(plyr)
#Con tidyverse
library(tidyverse)
hsb2$race2 <- mapvalues( hsb2$race, from = c("african american", "asian", "hispanic", "white"), to = c(rep("others", 3), "white" ))
table(hsb2$race2)
CrossTable(data=hsb2,y=hsb2$race2,prop.r = FALSE,prop.t = FALSE,prop.c = FALSE,prop.chisq = FALSE)
CrossTable(x=hsb2,y=hsb2$race2,prop.r = FALSE,prop.t = FALSE,prop.c = FALSE,prop.chisq = FALSE)
CrossTable(x=hsb2$schtyp,y=hsb2$race2,prop.r = FALSE,prop.t = FALSE,prop.c = FALSE,prop.chisq = FALSE)
#+2 muetras no relacionadas
ggbarstats(data=hsb2,x=schtyp,y=prog,bf.message = FALSE)
#con tabal de contingencia: por columnas #prop.c=TRUE
CrossTable(x=hsb2$schtyp,y=hsb2$prog,prop.r = FALSE,prop.t = FALSE,prop.chisq = FALSE,chisq = TRUE)
#ahora apra ve r las diferencias entre programas usaremos pruebas post-hoc
library(rstatix)
pairwise.prop.test(table(hsb2$schtyp,hsb2$prog))
table(hsb2$schtyp,hsb2$prog)
pairwise_prop_test(table(hsb2$schtyp,hsb2$prog))
#AHORA CON MUESTRAS RELACIONADAS
#ej, opinion del electorado sobre el presidnte antes y despues de aprobar el presupuesto
Performance <- matrix(c(794,86,150,570),nrow=2,dimnames = list("Survey1st"=c("App.","Dissap."), "Survey2nd"=c("App.","Dissap.")))
Performance
as.data.frame(as.table(Performance))
ggbarstats(data=survey_df,x=Survey1st,y=survey2nd,counts=Freq,paired=TRUE,bf.message = FALSE)
survey_df <- as.data.frame(as.table(Performance))
ggbarstats(data=survey_df,x=Survey1st,y=survey2nd,counts=Freq,paired=TRUE,bf.message = FALSE)
ggbarstats(data=survey_df,x=Survey1st,y=Survey2nd,counts=Freq,paired=TRUE,bf.message = FALSE)
#para obtener los datos disgregados, es con crosstable
CrossTable(Performance,prop.r = FALSE,prop.t = FALSE,prop.chisq = FALSE,mcnemar = TRUE)
#PARA +2 MUESTRAS RELACIONADAS usaremos la Q de Cochran
respuesta <- c(1,0,1,0,0,1,0,1,0,0,1,1,1,0,1,0,1,0,1,0,1,1,1,0,0,1,0,1,0,1,0)
Sujeto <- c(1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10)
Canal <- factor(rep(c("iicial","anuncio","internet")))
datos <- data.frame(Sujeto,Canal,respuesta)
datos <- data.frame(Sujeto,Canal,respuesta)
#PARA +2 MUESTRAS RELACIONADAS usaremos la Q de Cochran
respuesta <- c(1,0,1,0,0,1,0,1,0,0,1,1,1,0,1,0,1,0,1,0,1,1,1,0,0,1,0,1,0,1)
datos
datos <- data.frame(Sujeto,Canal,respuesta)
datos
#PARA +2 MUESTRAS RELACIONADAS usaremos la Q de Cochran
respuesta <- c(1,0,1,0,0,1,0,1,0,0,1,1,1,0,1,0,1,0,1,0,1,1,1,0,0,1,0,1,0,1)
Sujeto <- c(1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10)
Canal <- factor(rep(c("inicial","anuncio","internet")))
datos <- data.frame(Sujeto,Canal,respuesta)
datos
levels(datos$Canal) <- c("inicial","anuncio","internet")
ggbarstats(data=datos,x=respuesta,y=Canal,paired = TRUE,bf.message = FALSE)
#como este paquete aun no da los resultados los tenemos q sacar usando statrix
cochran_qtest(datos,respuesta ~Canal|Sujeto)
#como p es 0.90 no es estadisticamente significativo, si diese significativo tendriamos q mirar cuando, apra lo q usamos la de mcnemar
pairwise_mcnemar_test(datos,respuesta ~ Canal|Sujeto)
######### COMPARACIONES DE MEDIAS ###########################
#Comenzamos explorando los datos
hsb2 %>% get_summary_stats(write,type="mean_sd")
ggboxplot(y="write", data=hsb2,add=c("mean"),add.params=list(color='red'))
library(ggpubr)
ggboxplot(y="write", data=hsb2,add=c("mean"),add.params=list(color='red'))
#evaluemos los supuestos del modelo, ya q estamos con una prueba apramétrica
#outliers
hsb2 %>% identify_outliers(write)
#distribución normal
hsb2 %>%  shapiro_test(write)
ggqqplot(hsb2,x="write")
#vamos a hacer un t-test
t_test(write ~1,data=hsb2, mu=50)
cohens_d(write ~1,data=hsb2,mu=50)
#vamos a ahcer la de Yuen (no tiene en cuenta outliers)
hsb2 %>% filter(between(write,quantile(write,0.1),quantile(write,0.9))) %>% get_summary_stats(write,type="mean_sd")
######### COMPARACIONES DE MEDIAS ###########################
#Comenzamos explorando los datos
hsb2 %>% get_summary_stats(write,type="mean_sd")
hsb2 %>% filter(between(write,quantile(write,0.1),quantile(write,0.9))) %>% ggboxplot(y="write",add=c("mean"),add.params=list(color='red'))
#si los comprobamos los datos siguen sin ser normales, asi que no mola mucho usar esta prueba
library(DescTools)
YuenTTest(x=hsb2$write,mu=50)
#PRUEBA NO PARAMETRICA de WILCOXON para 1 MEUSTRA - comparamos la mediana
#ahora exploremos la mediana
hsb2 %>% get_summary_stats(write,type="median_iqr")
ggboxplot(y="write", data=hsb2,add=c("mean"),add.params=list(color='red'))
#veamos la asimetria de los datos con el histograma
gghistogram(hsb2, x="write", y="..density..",fill="steelblue",add_density = TRUE)
#ajustmos el modelo - rstatic
wilcox_test(write~1,data=hsb2,mu=50)
#esta pruab usa el orden y no los valores reales, por eso no es parametrica.
#calculamos el tamaño del efecto
wilcox_effsize(write ~1,data=hsb2,mu=50)
#representamos el resultado
gghistostats(x=write,data=hsb2,test.value = 50,type = "np",centrality.type = "median",test.value.size=TRUE,test.value.line=TRUE,bf.message=FALSE_)
#representamos el resultado
gghistostats(x=write,data=hsb2,test.value = 50,type = "np",centrality.parameter = "median",test.value.size=TRUE,test.value.line=TRUE,bf.message=FALSE_)
#representamos el resultado
gghistostats(x=write,data=hsb2,test.value = 50,type = "np",centrality.parameter = "nonparametric",test.value.size=TRUE,test.value.line=TRUE,bf.message=FALSE_)
#representamos el resultado
gghistostats(x=write,data=hsb2,test.value = 50,type = "nonparametric",centrality.parameter = "nonparametric",test.value.size=TRUE,test.value.line=TRUE,bf.message=FALSE_)
library(openintro)
head(hsb2)
#Con tidyverse
library(tidyverse)
## Tsudent para 2 mustras independientes
hsb2 %>% group_by(gender) %>% get_summary_stats(write, type="mean_sd")
library(ggpubr)
## Tsudent para 2 mustras independientes
hsb2 %>% group_by(gender) %>% get_summary_stats(write, type="mean_sd")
ggboxplot(x="gender", y="write",data=hsb2, add=c("mean"), add.params = list(color="red"))
ggboxplot(x="gender", y="write",data=hsb2, add=c("mean"), add.params = list(color="red"))
hsb2 %>% group_by(gender) %>% identify_outliers(write)
#si los comprobamos los datos siguen sin ser normales, asi que no mola mucho usar esta prueba
library(DescTools)
hsb2 %>% group_by(gender) %>% identify_outliers(write)
#ahora apra ve r las diferencias entre programas usaremos pruebas post-hoc
#Esto te compara las 3 proporciones, es decir als tres columnitas y solo ve diferncias entre la acadeimca y la vocacional
library(rstatix)
hsb2 %>% group_by(gender) %>% identify_outliers(write)
hsb2 %>% levene_test(write ~ gender) #rstatix
hsb2 %>% group_by(gender) %>% shapiro_test(write) #rstatix
ggqqplot(hsb2, x="write", facet.by = "gender")
t_test(write ~gender , data=hsb2)
t_test(write ~gender , data=hsb2, var.equal = False)# p<0.05
t_test(write ~gender , data=hsb2, var.equal = FALSE)# p<0.05
cohens_d(write ~ gender, data = hsb2)
### COMPARANDO PROPORCIONES
#1 MUESTRA
library(ggstatsplot)
theme(text=element_text(size=8), plot.subtitle = element_text(size=8)))
theme(text=element_text(size=8), plot.subtitle = element_text(size=8))
theme(text=element_text(size=8), plot.subtitle = element_text(size=8))
theme(text = element_text(size=8), plot.subtitle = element_text(size=8))
#+   theme(text = element_text(size=8), plot.subtitle = element_text(size=8))
ggbetweenstats(x=gender, y=write, data = hsb2, bf.message = FALSE)
get_summary_stats(write,type = "mean_sd")
